on:
  release:
    types: [created]

name: release
jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        path: dnscontrol  # TODO version number

    - name: zip
      run: zip -r dnscontrol.zip dnscontrol  # TODO version number

    - name: tarball
      run: tar -czvf dnscontrol.tar.gz dnscontrol  # TODO version number

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15.3

    - name: Build binaries
      run: go run build/build.go
      working-directory: dnscontrol

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: Please add your release note here
        draft: true
        prerelease: false

    - name: Upload dnscontrol-Darwin
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./dnscontrol/dnscontrol-Darwin
        asset_name: dnscontrol-Darwin
        asset_content_type: application/octet-stream

    - name: Upload dnscontrol-Linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./dnscontrol/dnscontrol-Linux
        asset_name: dnscontrol-Linux
        asset_content_type: application/octet-stream

    - name: Upload dnscontrol.exe
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./dnscontrol/dnscontrol.exe
        asset_name: dnscontrol.exe
        asset_content_type: application/octet-stream

    - name: Upload zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./dnscontrol.zip
        asset_name: dnscontrol.zip
        asset_label: Source code (zip)
        asset_content_type: application/zip

    - name: Upload tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./dnscontrol.tar.gz
        asset_name: dnscontrol.tar.gz
        asset_label: Source code (.tar.gz)
        asset_content_type: application/gzip
